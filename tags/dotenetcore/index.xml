<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>dotenetcore on P3的Blog</title><link>https://p3p3pp3.github.io/tags/dotenetcore.html</link><description>Recent content in dotenetcore on P3的Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Wed, 12 May 2021 12:46:54 +0800</lastBuildDate><atom:link href="https://p3p3pp3.github.io/tags/dotenetcore/index.xml" rel="self" type="application/rss+xml"/><item><title>CAP在非ASP Net项目中使用</title><link>https://p3p3pp3.github.io/post/2021/cap%E5%9C%A8%E9%9D%9Easp-net%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8.html</link><pubDate>Wed, 12 May 2021 12:46:54 +0800</pubDate><guid>https://p3p3pp3.github.io/post/2021/cap%E5%9C%A8%E9%9D%9Easp-net%E9%A1%B9%E7%9B%AE%E4%B8%AD%E4%BD%BF%E7%94%A8.html</guid><description>1 2 3 4 5 6 7 8 9 10 11 12 13 14 var services = new ServiceCollection(); services.AddLogging(); services.AddCap(x =&amp;gt; { x.UseInMemoryStorage(); x.UseInMemoryMessageQueue(); }); services.AddSingleton&amp;lt;IMySubscribe, EventHolder&amp;gt;(); _provider = services.BuildServiceProvider(); var bootstrap = _provider.GetService&amp;lt;IBootstrapper&amp;gt;(); bootstrap?.BootstrapAsync(default).Wait(); 要点： 事件处理类（上文的EventHolder）必须继承自ICapS</description></item></channel></rss>